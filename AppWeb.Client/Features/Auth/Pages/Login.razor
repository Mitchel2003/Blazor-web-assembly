@page "/auth/login"

@using AppWeb.Shared.Validators
@using AppWeb.Shared.Inputs
@using AppWeb.Client.Auth

@inject LoginPageVM ViewModel

<PageTitle>Login | Master Car</PageTitle>

<div class="flex justify-center items-center min-h-[calc(100vh-64px)] p-8 bg-gradient-to-br from-surface to-background">
    <div class="w-full max-w-md">
        <MudCard Elevation="4" Class="rounded-xl overflow-hidden">
            <MudCardHeader>
                <CardHeaderContent>
                    <div class="flex items-center">
                        <MudIcon Icon="@Icons.Material.Filled.LockOpen" Color="Color.Primary" Class="mr-3" />
                        <div>
                            <MudText Typo="Typo.h6">Bienvenido</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Secondary">Inicie sesión con su cuenta</MudText>
                        </div>
                    </div>
                </CardHeaderContent>
            </MudCardHeader>

            <MudCardContent>
                @if (ViewModel.LoginSuccess)
                {
                    <MudAlert Severity="Severity.Success" Variant="Variant.Filled" Class="mb-4">
                        ¡Inicio de sesión exitoso! Redirigiendo...
                    </MudAlert>
                }

                <MudForm @ref="_form" Model="@ViewModel.Input">
                    <FluentValidator TModel="LoginInput" Validator="@_loginValidator" />

                    <div class="flex flex-col gap-4">
                        <div>
                            <MudTextField T="string" @bind-Value="ViewModel.Input.Email" For="@(() => ViewModel.Input.Email)" InputType="InputType.Email" Label="Email" Placeholder="Ingrese su dirección de email" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Email" AutoFocus="true" Immediate="true" Variant="Variant.Outlined" />
                        </div>

                        <div class="relative">
                            <MudTextField T="string" @bind-Value="ViewModel.Input.Password" For="@(() => ViewModel.Input.Password)" Class="pr-10" InputType="@(ViewModel.ShowPassword? InputType.Text: InputType.Password)" Label="Contraseña" Placeholder="Ingrese su contraseña" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Lock" Immediate="true" Variant="Variant.Outlined" />

                            <MudIconButton Icon="@(ViewModel.ShowPassword? Icons.Material.Filled.Visibility : Icons.Material.Filled.VisibilityOff)"
                                           OnClick="@(async () => await ViewModel.TogglePasswordVisibilityCommand.ExecuteAsync(null))"
                                           Class="absolute top-2 right-2"
                                           Size="Size.Small" />
                        </div>

                        <div class="flex justify-between items-center mt-2">
                            <MudCheckBox T="bool" Label="Recordarme" Color="Color.Primary" Size="Size.Small" />
                            <MudLink Href="#" Underline="Underline.Always">¿Olvidó su contraseña?</MudLink>
                        </div>
                    </div>
                </MudForm>
            </MudCardContent>

            <MudCardActions Class="pb-4 px-4">
                <div class="flex flex-col gap-3 w-full">
                    <MudButton Disabled="@ViewModel.IsLoading"
                               Variant="Variant.Filled"
                               OnClick="@HandleLogin"
                               Color="Color.Primary"
                               Size="Size.Large"
                               FullWidth="true">
                        @if (ViewModel.IsLoading)
                        {
                            <div class="flex items-center">
                                <MudProgressCircular Size="Size.Small" Indeterminate="true" Color="Color.Inherit" Class="mr-2" />
                                <span>Iniciando sesión...</span>
                            </div>
                        }
                        else
                        {
                            <span>Iniciar Sesión</span>
                        }
                    </MudButton>

                    <div class="flex justify-center mt-2">
                        <MudText Typo="Typo.body2">
                            ¿No tiene una cuenta?
                            <MudLink Href="/users/create" Underline="Underline.Always">Regístrese</MudLink>
                        </MudText>
                    </div>
                </div>
            </MudCardActions>
        </MudCard>
    </div>
</div>

@code {
    private LoginInputValidator _loginValidator = new();
    private MudForm _form = new();

    protected override async Task OnInitializedAsync()
    { await ViewModel.InitializeAsync(); }

    private async Task HandleLogin()
    { await ViewModel.LoginCommand.ExecuteAsync(_form); }
}