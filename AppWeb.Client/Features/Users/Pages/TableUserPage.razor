@attribute [Authorize]
@page "/users"

@using Microsoft.AspNetCore.Components.Authorization
@using AppWeb.Client.Features.Users.Sections
@using Microsoft.AspNetCore.Authorization
@using AppWeb.Client.Shared.Ui.Skeletons
@inject TableUserPageVM vm

<PageTitle>Users</PageTitle>

<div class="page-users">
    <section class="page-header mb-6">
        <div class="container mx-auto px-4">
            <div class="flex flex-col md:flex-row md:items-center md:justify-between">
                <div>
                    <h1 class="text-2xl font-bold">Users</h1>
                    <p class="text-gray-500">Manage platform users</p>
                </div>
                <div class="mt-4 md:mt-0">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="vm.HandleAddUser">
                        Add User
                    </MudButton>
                </div>
            </div>
        </div>
    </section>

    @if (vm.Users is null)
    {
        <div class="container mx-auto px-4">
            <TablePageSkeleton ColumnCount="6" RowCount="8" ShowToolbar ShowPagination="false" />
        </div>
    }
    else
    {
        <UserTableSection Users="vm.Users"
                          Loading="vm.IsLoading"
                          OnRefresh="vm.LoadAsync"
                          OnAdd="vm.HandleAddUser"
                          OnView="vm.HandleViewUser"
                          OnEdit="vm.HandleEditUser"
                          OnDelete="vm.HandleDeleteUser"
                          OnBulkDelete="vm.HandleBulkDeleteUsers" />
    }
</div>

@code { protected override async Task OnInitializedAsync() { await vm.LoadAsync(); } }