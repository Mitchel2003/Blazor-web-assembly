@using Microsoft.AspNetCore.Components.Authorization
@using AppWeb.Client.Auth

<CascadingAuthenticationState>
    <Router AppAssembly="typeof(Program).Assembly">
        <Found Context="routeData">
            @{
                var isLoginPage = routeData.PageType.Name.Contains("Login");
                
                if (isLoginPage)
                {
                    <AuthGuard RedirectAuthenticatedFromLogin="true" DashboardPath="/">
                        <RouteView RouteData="routeData" DefaultLayout="typeof(Shared.MainLayout)" />
                    </AuthGuard>
                }
                else
                {
                    <AuthorizeRouteView RouteData="@routeData" DefaultLayout="typeof(Shared.MainLayout)">
                        <NotAuthorized>
                            <MudContainer MaxWidth="MaxWidth.Small" Class="d-flex justify-center align-center" Style="height: 100vh;">
                                <MudPaper Elevation="3" Class="pa-8 ma-2">
                                    <MudText Typo="Typo.h5" Class="mb-4">Not Authorized</MudText>
                                    <MudText>You are not authorized to access this resource.</MudText>
                                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="/auth/login" Class="mt-4">Login</MudButton>
                                </MudPaper>
                            </MudContainer>
                        </NotAuthorized>
                    </AuthorizeRouteView>
                }
            }
            <FocusOnNavigate RouteData="routeData" Selector="h1" />
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(Shared.MainLayout)">
                <div class="container mt-5 text-center">
                    <h1 class="display-4">404 - Page Not Found</h1>
                    <p class="lead">The page you requested could not be found.</p>
                    <a href="/" class="btn btn-primary">Return to Home</a>
                </div>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>