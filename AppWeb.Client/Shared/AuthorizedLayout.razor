@using Microsoft.AspNetCore.Components.Authorization
@inject JwtAuthStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inherits LayoutComponentBase
@using AppWeb.Client.Auth

<CascadingAuthenticationState>
    <AuthGuard RequireAuthentication="true" LoginPath="/auth/login">
        <MudLayout>
            <MudAppBar Elevation="0">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
                <MudText Typo="Typo.h6" Class="ml-3">Master Car</MudText>
                <MudSpacer />
                <MudIconButton Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" Edge="Edge.End" OnClick="@HandleLogout" />
            </MudAppBar>
            <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="1">
                <MudDrawerHeader>
                    <MudText Typo="Typo.h6">Master Car</MudText>
                </MudDrawerHeader>
                <NavMenu />
            </MudDrawer>
            <MudMainContent>
                <MudContainer MaxWidth="MaxWidth.Large" Class="my-4 pt-4">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </AuthGuard>
</CascadingAuthenticationState>

@code {
    private bool _drawerOpen = true;
    private void ToggleDrawer()
    { _drawerOpen = !_drawerOpen; }

    private async Task HandleLogout()
    {
        await AuthStateProvider.SetToken(null);
        NavigationManager.NavigateTo("/auth/login");
    }
} 