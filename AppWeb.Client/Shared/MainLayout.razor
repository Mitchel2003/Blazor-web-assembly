@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor.Utilities
@using AppWeb.Client.Auth

@inject JwtAuthStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inherits LayoutComponentBase

<CascadingAuthenticationState>
    <MudThemeProvider Theme="@_theme" IsDarkMode="@_isDarkMode" />
    <MudPopoverProvider />
    <MudDialogProvider />
    <MudSnackbarProvider />

    <MudLayout>
        <MudAppBar Elevation="1" Fixed="true" Class="backdrop-blur-md transition-all duration-300">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
            
            <MudText Typo="Typo.h6" Class="ml-2 hidden sm:flex">Master Car</MudText>
            
            <MudSpacer />
            
            <div class="flex items-center">
                <MudTooltip Text="@(_isDarkMode ? "Switch to Light Mode" : "Switch to Dark Mode")">
                    <MudIconButton Icon="@DarkLightModeButtonIcon" Color="Color.Inherit" OnClick="@ToggleDarkMode" />
                </MudTooltip>
                
                <AuthorizeView>
                    <Authorized>
                        <MudMenu Direction="Direction.Bottom" OffsetY="true" Dense="true" Class="ml-3">
                            <ActivatorContent>
                                <MudAvatar Color="Color.Secondary" Size="Size.Medium">
                                    <MudIcon Icon="@Icons.Material.Filled.Person" />
                                </MudAvatar>
                            </ActivatorContent>
                            <ChildContent>
                                <MudText Typo="Typo.body2" Class="px-4 py-2">@context.User?.Identity?.Name ?? "User"</MudText>
                                <MudDivider />
                                <MudMenuItem Icon="@Icons.Material.Filled.Person" Href="/account/profile">Profile</MudMenuItem>
                                <MudMenuItem Icon="@Icons.Material.Filled.Settings" Href="/account/settings">Settings</MudMenuItem>
                                <MudMenuItem Icon="@Icons.Material.Filled.Logout" OnClick="HandleLogout">Logout</MudMenuItem>
                            </ChildContent>
                        </MudMenu>
                    </Authorized>
                    <NotAuthorized>
                        <MudButton Variant="Variant.Text" Color="Color.Inherit" Href="/auth/login" Class="ml-3">Login</MudButton>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </MudAppBar>
        
        <MudDrawer @bind-Open="_drawerOpen" Elevation="2" ClipMode="DrawerClipMode.Always" Variant="@DrawerVariant.Mini" Class="transition-all duration-300 border-r border-divider">
            <MudDrawerHeader Class="pb-2">
                <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                    <MudText Typo="Typo.h6" Class="ml-1">
                        @if (_drawerOpen) { <span>Master Car</span> }
                        else { <span>MC</span> }
                    </MudText>
                    @if (_drawerOpen)
                    { <MudIconButton Icon="@Icons.Material.Filled.ChevronLeft" Color="Color.Inherit" Edge="Edge.End" OnClick="@ToggleDrawer" /> }
                </MudStack>
            </MudDrawerHeader>
            
            <SidebarNav />
        </MudDrawer>
        
        <MudMainContent Class="pt-16 px-4 pb-4">
            <MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
            @Body
            </MudContainer>
        </MudMainContent>
        
        <MudScrollToTop TopOffset="400" Class="mud-theme-primary">
            <MudFab Color="Color.Primary" Icon="@Icons.Material.Filled.KeyboardArrowUp" Size="Size.Small" />
        </MudScrollToTop>
    </MudLayout>

    <div id="blazor-error-ui" data-nosnippet>
        An unhandled error has occurred.
        <a href="." class="reload">Reload</a>
        <span class="dismiss">ðŸ—™</span>
    </div>
</CascadingAuthenticationState>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudTheme? _theme = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
            {
                DefaultBorderRadius = "8px",
                DrawerWidthLeft = "260px",
                DrawerMiniWidthLeft = "80px"
            }
        };
    }

    private void ToggleDrawer() { _drawerOpen = !_drawerOpen; }
    private void ToggleDarkMode() { _isDarkMode = !_isDarkMode; }
    
    private async Task HandleLogout()
    {
        await AuthStateProvider.SetToken(null);
        NavigationManager.NavigateTo("/auth/login");
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#110e2d",
        Primary = "#3f51b5",
        PrimaryDarken = "#303f9f",
        Secondary = "#ff4081",
        SecondaryDarken = "#f50057",
        Tertiary = "#1ec8a5",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
        Info = "#2196f3",
        Success = "#4caf50",
        Warning = "#ff9800",
        Error = "#f44336",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#7e6fff",
        PrimaryDarken = "#6a5fcc",
        Secondary = "#ff4081",
        SecondaryDarken = "#f50057",
        Tertiary = "#1ec8a5",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.LightMode,
        false => Icons.Material.Outlined.DarkMode,
    };
}